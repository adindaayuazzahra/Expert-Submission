// Mocks generated by Mockito 5.1.0 from annotations
// in tv/test/presentation/page/tv_detail_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:core/core.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv/tv.dart' as _i2;
import 'package:watchlist/watchlist.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTVShowDetail_0 extends _i1.Fake implements _i2.GetTVShowDetail {}

class _FakeGetTVRecommendations_1 extends _i1.Fake
    implements _i2.GetTVRecommendations {}

class _FakeGetWatchlistTVStatus_2 extends _i1.Fake
    implements _i3.GetWatchlistTVStatus {}

class _FakeSaveTVWatchList_3 extends _i1.Fake implements _i3.SaveTVWatchList {}

class _FakeRemoveTVWatchlist_4 extends _i1.Fake
    implements _i3.RemoveTVWatchlist {}

class _FakeTVDetail_5 extends _i1.Fake implements _i4.TVDetail {}

/// A class which mocks [TVDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVDetailNotifier extends _i1.Mock implements _i2.TVDetailNotifier {
  MockTVDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTVShowDetail get getTVDetail =>
      (super.noSuchMethod(Invocation.getter(#getTVDetail),
          returnValue: _FakeGetTVShowDetail_0()) as _i2.GetTVShowDetail);
  @override
  _i2.GetTVRecommendations get getTVRecommendations => (super.noSuchMethod(
      Invocation.getter(#getTVRecommendations),
      returnValue: _FakeGetTVRecommendations_1()) as _i2.GetTVRecommendations);
  @override
  _i3.GetWatchlistTVStatus get getWatchListTVStatus => (super.noSuchMethod(
      Invocation.getter(#getWatchListTVStatus),
      returnValue: _FakeGetWatchlistTVStatus_2()) as _i3.GetWatchlistTVStatus);
  @override
  _i3.SaveTVWatchList get saveTVWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveTVWatchlist),
          returnValue: _FakeSaveTVWatchList_3()) as _i3.SaveTVWatchList);
  @override
  _i3.RemoveTVWatchlist get removeTVWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeTVWatchlist),
          returnValue: _FakeRemoveTVWatchlist_4()) as _i3.RemoveTVWatchlist);
  @override
  _i4.TVDetail get tvShow => (super.noSuchMethod(Invocation.getter(#tvShow),
      returnValue: _FakeTVDetail_5()) as _i4.TVDetail);
  @override
  _i4.RequestState get tvState =>
      (super.noSuchMethod(Invocation.getter(#tvState),
          returnValue: _i4.RequestState.Empty) as _i4.RequestState);
  @override
  List<_i4.TV> get tvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendations),
          returnValue: <_i4.TV>[]) as List<_i4.TV>);
  @override
  _i4.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i4.RequestState.Empty) as _i4.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> fetchTVDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#fetchTVDetail, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> addWatchlist(_i4.TVDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [tvShow]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> removeFromWatchlist(_i4.TVDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [tvShow]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> loadWatchlistStatus(int? id) =>
      (super.noSuchMethod(Invocation.method(#loadWatchlistStatus, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
